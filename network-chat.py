# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'network-ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSignal, pyqtSlot, QObject
import socket, time, threading

# TODO Essayer d'implementer Un nouveau signal seulement pour les boutons (EX de def : ActivateButton)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 400)
        MainWindow.setMinimumSize(QtCore.QSize(600, 400))
        MainWindow.setMaximumSize(QtCore.QSize(600, 500))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMaximumSize(QtCore.QSize(600, 600))
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.statusLabel = QtWidgets.QLabel(self.centralwidget)
        self.statusLabel.setObjectName("statusLabel")
        self.gridLayout_2.addWidget(self.statusLabel, 1, 0, 1, 1)
        self.chatText = QtWidgets.QTextBrowser(self.centralwidget)
        self.chatText.setObjectName("chatText")
        self.gridLayout_2.addWidget(self.chatText, 2, 0, 1, 1)
        self.connectButton = QtWidgets.QPushButton(self.centralwidget, enabled=False)
        self.connectButton.setObjectName("connectButton")
        self.gridLayout_2.addWidget(self.connectButton, 1, 1, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.ipLabel = QtWidgets.QLabel(self.centralwidget)
        self.ipLabel.setObjectName("ipLabel")
        self.gridLayout.addWidget(self.ipLabel, 0, 0, 1, 1)
        self.portLabel = QtWidgets.QLabel(self.centralwidget)
        self.portLabel.setObjectName("portLabel")
        self.gridLayout.addWidget(self.portLabel, 0, 2, 1, 1)
        self.ipEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.ipEdit.setObjectName("ipEdit")
        self.gridLayout.addWidget(self.ipEdit, 0, 1, 1, 1)
        self.portEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.portEdit.setObjectName("portEdit")
        self.gridLayout.addWidget(self.portEdit, 0, 3, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout_2.addWidget(self.lineEdit, 3, 0, 1, 1)
        self.sendButton = QtWidgets.QPushButton(self.centralwidget, enabled=False)
        self.sendButton.setObjectName("sendButton")
        self.gridLayout_2.addWidget(self.sendButton, 3, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 600, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.ipEdit.textChanged.connect(self.enableConnectButton)
        self.portEdit.textEdited.connect(self.enableConnectButton)
        self.connectButton.clicked.connect(self.connectServer)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.statusLabel.setText(_translate("MainWindow",
                                            "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:#D35400;\">Welcome User !</span></p></body></html>"))
        self.chatText.setHtml(_translate("MainWindow",
                                         "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                         "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                         "p, li { white-space: pre-wrap; }\n"
                                         "</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
                                         "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.connectButton.setText(_translate("MainWindow", "Connect"))
        self.ipLabel.setText(_translate("MainWindow", "IP"))
        self.portLabel.setText(_translate("MainWindow", "Port"))
        self.sendButton.setText(_translate("MainWindow", "Send"))

    def enableConnectButton(self):
        try:

            if len(self.ipEdit.text()) > 0 and len(self.portEdit.text()) > 0:
                if int(self.portEdit.text()) < 65535 and int(self.portEdit.text()) > 0:
                    self.connectButton.setEnabled(True)
                    self.Ip = self.ipEdit.text()
                    self.port = self.portEdit.text()

                else:
                    self.connectButton.setDisabled(True)
                    self.statusLabel.setText(
                        "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:#F00000;\">Port number must be lower than 65535!</span></p></body></html>")

            else:
                self.connectButton.setDisabled(True)

        except ValueError:
            self.statusLabel.setText(
                "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:#F00000;\">Error in Port Number !</span></p></body></html>")

    def connectServer(self):
        self.connectButton.setDisabled(True)
        self.s = Server(self.Ip, self.port)
        self.s.StatusReport.connect(self.updateStatus)
        self.server = threading.Thread(target=self.s.ConnectServer)
        self.server.start()

    def updateStatus(self, Color, Text, Typemessage):
        self.statusLabel.setText(
            "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:{};\">{}</span></p></body></html>".format(
                Color, Text))
        if Typemessage == "Error":
            self.connectButton.setEnabled(True)
            self.sendButton.setDisabled(True)

        if Typemessage == "Connection":
            self.sendButton.setEnabled(True)
            self.connectButton.setDisabled(True)


class Server(QObject):
    StatusReport = pyqtSignal(str, str, str)

    def __init__(self, Ip, Port):
        QObject.__init__(self)
        self.Ip = Ip
        self.Port = Port

    def ConnectServer(self):
        try:
            serverSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            self.StatusReport.emit("#1ABC9C", "Connecting...", "Info")

            serverSocket.settimeout(1)
            serverSocket.connect((self.Ip, int(self.Port)))
            self.StatusReport.emit("#8E44AD", "Connected to {}".format(self.Ip), "Connection")
        except socket.timeout:
            self.StatusReport.emit("#FF0000", "Connection Timed out !", "Error")

        except socket.gaierror:
            self.StatusReport.emit("#FF0000", "Error in IP Address !", "Error")

        except ConnectionRefusedError:
            self.StatusReport.emit("#FF0000", "Connection refused by server !", "Error")


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

# -*- coding: utf-8 -*-

# MainWindow implementation generated from reading ui file 'network-ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSignal, pyqtSlot, QObject
import socket, time, threading


# TODO ChatUI crÃ©e mais pas connecte inutile


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(708, 181)
        MainWindow.setMaximumSize(708,181)
        MainWindow.setMinimumSize(700,200)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.IPLabel = QtWidgets.QLabel(self.centralwidget)
        self.IPLabel.setObjectName("IPLabel")
        self.gridLayout.addWidget(self.IPLabel, 0, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem, 2, 6, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem1, 0, 6, 1, 1)
        self.ConnectButton = QtWidgets.QPushButton(self.centralwidget, enabled=False)
        self.ConnectButton.setObjectName("ConnectButton")
        self.gridLayout.addWidget(self.ConnectButton, 6, 6, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem2, 5, 6, 1, 1)
        self.StatusLabel = QtWidgets.QLabel(self.centralwidget)
        self.StatusLabel.setObjectName("StatusLabel")
        self.gridLayout.addWidget(self.StatusLabel, 3, 6, 1, 1)
        self.PortLabel = QtWidgets.QLabel(self.centralwidget)
        self.PortLabel.setObjectName("PortLabel")
        self.gridLayout.addWidget(self.PortLabel, 0, 7, 1, 1)
        self.IPInput = QtWidgets.QLineEdit(self.centralwidget)
        self.IPInput.setObjectName("IPInput")
        self.gridLayout.addWidget(self.IPInput, 0, 1, 1, 1)
        self.PortInput = QtWidgets.QLineEdit(self.centralwidget)
        self.PortInput.setObjectName("PortInput")
        self.gridLayout.addWidget(self.PortInput, 0, 8, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Client"))
        self.ConnectButton.setText(_translate("MainWindow", "Connect"))
        self.PortLabel.setText(_translate("MainWindow", "PORT :"))
        self.IPLabel.setText(_translate("MainWindow", "IP :"))
        self.StatusLabel.setText(_translate("MainWindow", ""))

    def InitSignals(self):
        self.IPInput.textChanged.connect(self.enableConnectButton)
        self.PortInput.textChanged.connect(self.enableConnectButton)
        self.ConnectButton.clicked.connect(self.connectServer)

    def enableConnectButton(self):
        try:
            if len(self.IPInput.text()) > 0 and len(self.PortInput.text()) > 0:
                if int(self.PortInput.text()) < 65535 and int(self.PortInput.text()) > 0:
                    self.ConnectButton.setEnabled(True)
                    self.Ip = self.IPInput.text()
                    self.Port = self.PortInput.text()

                else:
                    self.ConnectButton.setDisabled(True)
                    self.StatusLabel.setText(
                        "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:#F00000;\">Port number must be lower than 65535!</span></p></body></html>")

            else:
                self.ConnectButton.setDisabled(True)

        except ValueError:
            self.StatusLabel.setText(
                "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:#F00000;\">Error in Port Number !</span></p></body></html>")

    def connectServer(self):
        self.ConnectButton.setDisabled(True)
        self.server = Server(self.Ip, self.Port)
        self.server_thread = QtCore.QThread()
        self.server.StatusReport.connect(self.updateStatus)
        self.server.DisableButton.connect(self.disableButtons)
        self.server.EnableButton.connect(self.enableButtons)
        self.server.showChat.connect(self.showUIChat)
        self.server.moveToThread(self.server_thread)
        self.server.finished.connect(self.server_thread.quit)
        self.server_thread.started.connect(self.server.ConnectServer)
        self.server_thread.start()

    def disableButtons(self, Button):
        Button.setDisabled(True)

    def enableButtons(self, Button):
        Button.setEnabled(True)

    def updateStatus(self, Color, Text):
        self.StatusLabel.setText(
            "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:{};\">{}</span></p></body></html>".format(
                Color, Text))

    def showUIChat(self):
        UI_Chat = QtWidgets.QWidget()
        ui = Ui_FenClient()
        ui.setupUi(UI_Chat)
        UI_Chat.show()

    # def sendData(self):
    #     data = self.lineEdit.text()
    #     if data != "":
    #         self.s.sendData(data)
    #         self.lineEdit.clear()
    #         self.chatText.append("You: " + data)
    #     else:
    #         pass

class Ui_FenClient(object):
    def setupUi(self, FenClient):
        FenClient.setObjectName("FenClient")
        FenClient.resize(628, 480)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("chat.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        FenClient.setWindowIcon(icon)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(FenClient)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_5 = QtWidgets.QLabel(FenClient)
        self.label_5.setPixmap(QtGui.QPixmap("chat.png"))
        self.label_5.setObjectName("label_5")
        self.verticalLayout.addWidget(self.label_5)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.listeMessages = QtWidgets.QTextEdit(FenClient)
        self.listeMessages.setReadOnly(True)
        self.listeMessages.setObjectName("listeMessages")
        self.verticalLayout_2.addWidget(self.listeMessages)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_3 = QtWidgets.QLabel(FenClient)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_2.addWidget(self.label_3)
        self.pseudo = QtWidgets.QLineEdit(FenClient)
        self.pseudo.setMaximumSize(QtCore.QSize(100, 16777215))
        self.pseudo.setObjectName("pseudo")
        self.horizontalLayout_2.addWidget(self.pseudo)
        self.label_4 = QtWidgets.QLabel(FenClient)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_2.addWidget(self.label_4)
        self.message = QtWidgets.QLineEdit(FenClient)
        self.message.setObjectName("message")
        self.horizontalLayout_2.addWidget(self.message)
        self.boutonEnvoyer = QtWidgets.QPushButton(FenClient)
        self.boutonEnvoyer.setIcon(icon)
        self.boutonEnvoyer.setObjectName("boutonEnvoyer")
        self.horizontalLayout_2.addWidget(self.boutonEnvoyer)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)

        self.retranslateUi(FenClient)
        QtCore.QMetaObject.connectSlotsByName(FenClient)

    def retranslateUi(self, FenClient):
        _translate = QtCore.QCoreApplication.translate
        FenClient.setWindowTitle(_translate("FenClient", "ZeroChat - Client"))
        self.label_3.setText(_translate("FenClient", "Pseudo :"))
        self.label_4.setText(_translate("FenClient", "Message :"))
        self.boutonEnvoyer.setText(_translate("FenClient", "Envoyer"))

class Server(QObject):
    StatusReport = pyqtSignal(str, str)
    ChatTextReport = pyqtSignal(str)
    finished = pyqtSignal()
    showChat = pyqtSignal()
    EnableButton = pyqtSignal(QObject)
    DisableButton = pyqtSignal(QObject)

    def __init__(self, Ip, Port):
        QObject.__init__(self)
        self.Ip = Ip
        self.Port = Port
        self.serverSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.serverSocket.settimeout(1)
        self.fragments = []

    def ConnectServer(self):
        try:
            self.StatusReport.emit("#1ABC9C", "Connecting...")
            self.serverSocket.connect((self.Ip, int(self.Port)))
            self.StatusReport.emit("#8E44AD", "Connected to {}".format(self.Ip))
            self.DisableButton.emit(ui.ConnectButton)
            self.serverSocket.settimeout(None)
            self.showChat.emit()
            self.FetchThread = threading.Thread(target=self.FetchServer)
            self.FetchThread.start()

        except socket.timeout:
            self.StatusReport.emit("#FF0000", "Connection Timed out !")
            self.EnableButton.emit(ui.ConnectButton)
            self.finished.emit()

        except socket.gaierror:
            self.StatusReport.emit("#FF0000", "Error in IP Address !")
            self.EnableButton.emit(ui.ConnectButton)
            self.finished.emit()

        except ConnectionRefusedError:
            self.StatusReport.emit("#FF0000", "Connection refused by server !")
            self.EnableButton.emit(ui.ConnectButton)
            self.finished.emit()

    def FetchServer(self):

        while True:
            data = self.serverSocket.recv(2048)
            if not data:
                self.StatusReport.emit("#FF0000", "Connexion Lost !")
                self.EnableButton.emit(ui.ConnectButton)
                break
            else:
                data = data.decode("UTF8")
                self.ChatTextReport.emit(data)

    def sendData(self, data):
        self.serverSocket.send(bytes(data, "UTF-8"))


if __name__ == "__main__":
    import sys


    def initChat():
        print("hey")
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.InitSignals()
    MainWindow.show()
    sys.exit(app.exec_())
